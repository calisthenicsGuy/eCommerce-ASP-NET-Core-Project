@model ProductsServiceModel

@{
    ViewData["Title"] = "Products | Commerce Park";
    ViewData["ImageHeight"] = 400;

    SearchingProductsCriteria searchingProductsCriteriaModel = new SearchingProductsCriteria()
            {
                SearchCategory = Model.SearchCategory,
                CheapestProduct = Model.CheapestProduct,
                ProductsSorting = Model.ProductsSorting,
                SearchNameCriteria = Model.SearchNameCriteria,
            };
}

<div class="container-fluid">
    <div id="breadcrumb" class="section">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <ul class="breadcrumb-tree">
                        <li><a asp-controller="Products" asp-action="All">Products</a></li>
                        <li><a asp-controller="Products" asp-action="All" asp-route-SearchCategory="@Model.SearchCategory">@Model.SearchCategory (@(Model.TotalProducts == 1 ? "1 result" : $"{Model.TotalProducts} results"))</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<br />

<div class="container-fluid">
    <div class="row">
        <div class="offset-2 col-8" style="margin-right: 35px">
            @if (Model.Products.Any())
            {
                <partial name="_SearchAndSortProductsPartail" model="searchingProductsCriteriaModel" />

                <div class="row mt-4">
                    @foreach (var product in Model.Products)
                    {
                        <div class="col-4 mt-4">
                            <partial name="_ProductCardPartial" model="product" />
                        </div>
                    }
                </div>

                <partial name="_PaginationPartial" model="Model" />
            }
            else
            {
                <partial name="_NoResultsPartial" model="Model.SearchCategory" />
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function AddProductToWishlistForUnsignedUsers() {
            alert('Sign In to access your wishlist.');
        }

        function AddProductToWishlist(productId) {
            let addProductToWishlistElement = document.getElementById('add-product-to-wishlist-' + productId);
            let removeProductFromWishlistElement = document.getElementById('remove-product-from-wishlist-' + productId);

            $.get('/api/productwishlistsapi/add/?productId=' + productId, (data) => {
                addProductToWishlistElement.classList.add('d-none');
                removeProductFromWishlistElement.classList.remove('d-none');
            })
        };

        function RemoveProductFromWishlist(productId) {
            let addProductToWishlistElement = document.getElementById('add-product-to-wishlist-' + productId);
            let removeProductFromWishlistElement = document.getElementById('remove-product-from-wishlist-' + productId);

            $.get('/api/productwishlistsapi/remove/?productId=' + productId, (data) => {
                addProductToWishlistElement.classList.remove('d-none');
                removeProductFromWishlistElement.classList.add('d-none');
            })
        };
    </script>
}